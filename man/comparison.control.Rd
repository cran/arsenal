% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/comparison.control.R
\name{comparison.control}
\alias{comparison.control}
\title{Control settings for `compare` function}
\usage{
comparison.control(tol.logical = "none", tol.num = c("absolute", "percent",
  "pct"), tol.num.val = sqrt(.Machine$double.eps), int.as.num = FALSE,
  tol.char = c("none", "trim", "case", "both"), tol.factor = c("none",
  "levels", "labels"), factor.as.char = FALSE, tol.date = "absolute",
  tol.date.val = 0, tol.other = "none", tol.vars = "none", ...)
}
\arguments{
\item{tol.logical, tol.num, tol.char, tol.factor, tol.date, tol.other}{A function or one of the shortcut character strings,
denoting the tolerance function to use for a given data type. See "details", below.}

\item{tol.num.val}{Numeric; maximum value of differences allowed in numerics (fed to the function given in \code{tol.num}).}

\item{int.as.num}{Logical; should integers be coerced to numeric before comparison? Default FALSE.}

\item{factor.as.char}{Logical; should factors be coerced to character before comparison? Default FALSE.}

\item{tol.date.val}{Numeric; maximum value of differences allowed in dates (fed to the function given in \code{tol.date}).}

\item{tol.vars}{Either \code{"none"} (the default), denoting that variable names are to be matched as-is, or a
character vector denoting equivalence classes for characters in the variable names. See "details", below.}

\item{...}{Other arguments (not in use at this time).}
}
\value{
A list containing the necessary parameters for the \code{\link{compare.data.frame}} function.
}
\description{
Control tolerance definitions for the \code{\link{compare.data.frame}} function.
}
\details{
The following character strings are accepted:
\itemize{
  \item{\code{tol.logical = "none"}: compare logicals exactly as they are.}
  \item{\code{tol.num = "absolute"}: compare absolute differences in numerics.}
  \item{\code{tol.num = "percent"}, \code{tol.num = "pct"} compare percent differences in numerics.}
  \item{\code{tol.char = "none"}: compare character strings exactly as they are.}
  \item{\code{tol.char = "trim"}: left-justify and trim all trailing white space.}
  \item{\code{tol.char = "case"}: allow differences in upper/lower case.}
  \item{\code{tol.char = "both"}: combine \code{"trim"} and \code{"case"}.}
  \item{\code{tol.factor = "none"}: match both character labels and numeric levels.}
  \item{\code{tol.factor = "levels"}: match only the numeric levels.}
  \item{\code{tol.factor = "labels"}: match only the labels.}
  \item{\code{tol.date = "absolute"}: compare absolute differences in dates.}
  \item{\code{tol.other = "none"}: expect objects of other classes to be exactly identical.}
}

\code{tol.vars}: If not set to \code{"none"} (the default), the \code{tol.vars} argument is a character vector denoting equivalence classes
  for the characters in the variable names. A single character in this vector means to replace that character
  with \code{""}. All other strings in this vector are split by character and replaced by the first character in the string.

E.g., a character vector \code{c("._", "aA", " ")} would denote that the dot and underscore are equivalent (to be translated to a dot),
  that "a" and "A" are equivalent (to be translated to "a"), and that spaces should be removed.

The special character string \code{"case"} in this vector is the same as specifying \code{paste0(letters, LETTERS)}.
}
\examples{
cntl <- comparison.control(
  tol.num = "pct",     # calculate percent differences
  tol.vars = c("case", # ignore case
               "._",   # set all underscores to dots.
               "e")    # remove all letter e's
)
}
\seealso{
\code{\link{compare.data.frame}}, \code{\link{comparison.tolerances}}
}
\author{
Ethan Heinzen
}
